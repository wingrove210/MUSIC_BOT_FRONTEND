import { useEffect, useState } from "react";
import { useLocation } from "react-router-dom";
import "./SurveyForm.css";
import BackButton from "../ButtonBack";
import Reciepie from "../Reciepie"; // new import
import PropTypes from "prop-types";
import { useSelector } from "react-redux";
import { selectForm } from "../../redux/form/selectors";
import axios from "axios";
import { v4 as uuid4 } from "uuid";
const TelegramWebApp = window.Telegram.WebApp;
const TelegramWebView = window.Telegram.WebView;

// Declare a common field class for uniform styling.
const fieldClass =
  "text-sm custom-input w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm transition duration-300 ease-in-out transform focus:-translate-y-1 focus:outline-blue-300 hover:shadow-lg hover:border-blue-300 bg-gray-100 input-field";
export default function SurveyForm({ price, name }) {
  const location = useLocation();

  // New useEffect to ensure Telegram WebApp is ready
  useEffect(() => {
    TelegramWebApp.ready();
    console.log("TelegramWebApp is ready", TelegramWebApp.initDataUnsafe);
  }, []);

  const queryPrice = Number(new URLSearchParams(location.search).get("price")) || price;
  const queryName = new URLSearchParams(location.search).get("name") || name;
  const formDataFromRedux = useSelector(selectForm); // Use selector to get form data from Redux
  console.log("User data:", formDataFromRedux);
  const [showPopup, setShowPopup] = useState(false);
  const [totalPrice, setTotalPrice] = useState(queryPrice);
  const API_URL = "https://api.skyrodev.ru"
  const [isPaymentPending, setIsPaymentPending] = useState(false);
  const [formData, setFormData] = useState({
    formRole: "", // –ö—Ç–æ –∑–∞–ø–æ–ª–Ω—è–µ—Ç —Ñ–æ—Ä–º—É?
    songFor: "", // –î–ª—è –∫–æ–≥–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø–µ—Å–Ω—è?
    heroName: "",
    heroOrigin: "",
    heroItem: "",
    job: "",
    equipment: "",
    motivation: "",
    comrades: "",
    moments: "",
    words: "", // already used in question 9
    additionalChecks: {
      remembrance: false,
      personalMessage: false,
      specialPhrases: false,
      futureMessage: false,
    },
    // New fields for "–ß—Ç–æ –µ—â—ë –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å?"
    remembranceText: "",
    personalMessageText: "",
    specialPhrasesText: "",
    futureMessageText: "",
    otherText: "",
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  // const handleCheckboxChange = (e) => {
  //   const { name, checked } = e.target;
  //   setFormData(prev => ({
  //     ...prev,
  //     additionalChecks: {
  //       ...prev.additionalChecks,
  //       [name]: checked
  //     }
  //   }));
  // };

  const createPaymentLink = async (
    amount,
    description = "–û–ø–ª–∞—Ç–∞ —É—Å–ª—É–≥–∏",
    currency = "RUB"
  ) => {
    if (!amount || isNaN(amount)) {
      console.error("‚ùå –û—à–∏–±–∫–∞: —Å—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º", amount);
      return null;
    }
  
    try {
      const params = new URLSearchParams({
        amount: parseFloat(amount),
        currency,
        description,
      });
  
      console.log("üì¢ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞:", params.toString());
  
      const response = await axios.post(
        `${API_URL}/api/payment/create?${params.toString()}`
      );
  
      console.log("üì© –û—Ç–≤–µ—Ç –æ—Ç API:", response.data);
  
      if (response.data && response.data.payment_link && response.data.payment_response?.id) {
        console.log("‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É:", response.data.payment_link);
        setPaymentId(response.data.payment_response.id);
  
        // return {
        //   paymentId: response.data.payment_response.id,
        //   paymentLink: response.data.payment_link,
        // };
        // window.location.href = response.data.payment_link;
        return response.data.payment_link;
      } else {
        console.error("‚ùå –û—à–∏–±–∫–∞: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API", response.data);
        return null;
      }
    } catch (error) {
      console.error("üî• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞:", error.message);
      return null;
    }
  };

  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–ª–∞—Ç—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  const checkPaymentStatus = async (paymentId) => {
    if (!paymentId) {
      console.error("–û—à–∏–±–∫–∞: paymentId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.");
      return;
    }
  
    try {
      while (true) {
        const response = await axios.get(
          `${API_URL}/api/payment/check?payment_id=${paymentId}`
        ).then((res) => {
          const status = res.data.status
        });
        const paymentStatus = response.data.status;
  
        if (paymentStatus === "succeeded") {
          console.log("‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!");
          setIsPaymentPending(false);
  
          // –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
          handleSubmit();
          break;
        } else {
          console.log("‚è≥ –û–ø–ª–∞—Ç–∞ –µ—â—ë –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...");
          await new Promise((resolve) => setTimeout(resolve, 5000));
        }
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞:", error);
    }
  };

  const processPaymentAndSubmit = async () => {
    console.log("üõ† –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ–ø–ª–∞—Ç—ã...");
    
    const paymentData = await createPaymentLink(totalPrice);
    console.log("paymentData", paymentData);
  
    if (paymentData && paymentData.paymentLink) {
      console.log("üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –ø–æ–ª—É—á–µ–Ω–∞:", paymentData.paymentLink);
      
      window.open(paymentData.paymentLink, "_blank"); // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É
    
      setIsPaymentPending(true);
      checkPaymentStatus(paymentData.paymentId);
    } else {
      console.error("‚ùå –û—à–∏–±–∫–∞: paymentData –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã.");
    }
  };
  const handleSubmit = async (e) => {
    e.preventDefault();
    const message_data = {
      "id": `${uuid4()}`,
      "name": formDataFromRedux.name || "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
      "email": formDataFromRedux.email || "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
      "phone": formDataFromRedux.phone || "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
      "telegram": formDataFromRedux.telegram || "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
      "formRole": formData.formRole,
      "songFor": formData.songFor,
      "heroName": formData.heroName,
      "heroOrigin": formData.heroOrigin,
      "heroItem": formData.heroItem,
      "job": formData.job,
      "equipment": formData.equipment,
      "motivation": formData.motivation,
      "comrades": formData.comrades,
      "moments": formData.moments,
      "words": formData.words,
      "additionalChecks": formData.additionalChecks,
      "remembranceText": formData.remembranceText,
      "personalMessageText": formData.personalMessageText,
      "specialPhrasesText": formData.specialPhrasesText,
      "futureMessageText": formData.futureMessageText,
      "otherText": formData.otherText,
    }
    const data = {
      "title": "–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞",
		"description": `–ü–æ–∫—É–ø–∫–∞ –ø–µ—Å–Ω–∏. –¢–∞—Ä–∏—Ñ "${queryName}"`,
		"payload": JSON.stringify(message_data),
		"currency": "RUB",
		"prices": `${totalPrice}`
    }
    axios.post(`${API_URL}/api/create-invoice?web_app_data=` + JSON.stringify(data))
    .then((res) => {
      const invoice_url = res.data
      TelegramWebApp.openInvoice(invoice_url)
    })

    // try {
    //   // Define adminBotToken before using it
    //   const adminBotToken = "7683789001:AAGw-K5_wWnvmHPvtC6fRX-Cm7H45B-Gmf0";

    //   const botToken = "8151650888:AAFSJqYDHUtrii-7WS8sBDgi0MGtmYosg9k";
    //   // Use fallback: try to get user_id from URL query if not present in initDataUnsafe
    //   const queryParams = new URLSearchParams(location.search);
    //   const chatId =
    //     TelegramWebApp.initDataUnsafe.user?.id || queryParams.get("user_id");
    //   createPaymentLink(totalPrice);
    //   // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
    //   const adminMessage = `
    //   üìã *–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞*  
    //   –ò–º—è: ${formDataFromRedux.name || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
    //   Email: ${formDataFromRedux.email || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
    //   –¢–µ–ª–µ—Ñ–æ–Ω: ${formDataFromRedux.phone || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
    //   –¢–µ–ª–µ–≥—Ä–∞–º: ${formDataFromRedux.telegram || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}

    //   ‚Ä¢ –ö—Ç–æ –∑–∞–ø–æ–ª–Ω—è–µ—Ç —Ñ–æ—Ä–º—É: ${formData.formRole}  
    //   ‚Ä¢ –î–ª—è –∫–æ–≥–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø–µ—Å–Ω—è: ${formData.songFor}  
      
    //   *–û –≥–µ—Ä–æ–µ*  
    //   1. –ò–º—è –∏ –ø–æ–∑—ã–≤–Ω–æ–µ: ${formData.heroName}  
    //   2. –†–æ–¥–∏–Ω–∞: ${formData.heroOrigin}  
    //   3. –û—Å–æ–±–∞—è –≤–µ—â—å/—Å–∏–º–≤–æ–ª: ${formData.heroItem}  
      
    //   *–û —Å–ª—É–∂–±–µ*  
    //   4. –ß–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ–¥–æ–≤–æ–π: ${formData.job}  
    //   5. –¢–µ—Ö–Ω–∏–∫–∞/–æ—Ä—É–∂–∏–µ: ${formData.equipment}  
      
    //   *–û —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ, –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ –∫–æ–º–∞–Ω–¥–µ*  
    //   6. –ß—Ç–æ –¥–∞—ë—Ç —Å–∏–ª—É –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—é: ${formData.motivation}  
    //   7. –ë–æ–µ–≤—ã–µ —Ç–æ–≤–∞—Ä–∏—â–∏: ${formData.comrades}  
      
    //   *–õ–∏—á–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –≤ –ø–µ—Å–Ω—é*  
    //   8. –ú–æ–º–µ–Ω—Ç—ã –∏–∑ –∂–∏–∑–Ω–∏ –≥–µ—Ä–æ—è: ${formData.moments}  
    //   9. –í–∞–∂–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–ª–∏ —Ü–∏—Ç–∞—Ç—ã: ${formData.words}  
    //   10. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: 
    //      –í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Å–ª—É–∂–±–µ: ${
    //        formData.additionalChecks.remembrance ? "‚úì" : "‚úó"
    //      }
    //      –õ–∏—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ: ${
    //        formData.additionalChecks.personalMessage ? "‚úì" : "‚úó"
    //      }
    //      –û—Å–æ–±—ã–µ —Ñ—Ä–∞–∑—ã: ${formData.additionalChecks.specialPhrases ? "‚úì" : "‚úó"}
    //      –ü–æ—Å–ª–∞–Ω–∏–µ –≤ –±—É–¥—É—â–µ–µ: ${
    //        formData.additionalChecks.futureMessage ? "‚úì" : "‚úó"
    //      }
    //      –î—Ä—É–≥–æ–µ: ${formData.otherText}
    //         `;
    //   const message = `
    //   üìã *–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞*  
    //   ‚Ä¢ –ö—Ç–æ –∑–∞–ø–æ–ª–Ω—è–µ—Ç —Ñ–æ—Ä–º—É: ${formData.formRole}  
    //   ‚Ä¢ –î–ª—è –∫–æ–≥–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø–µ—Å–Ω—è: ${formData.songFor}  
      
    //   *–û –≥–µ—Ä–æ–µ*  
    //   1. –ò–º—è –∏ –ø–æ–∑—ã–≤–Ω–æ–µ: ${formData.heroName}  
    //   2. –†–æ–¥–∏–Ω–∞: ${formData.heroOrigin}  
    //   3. –û—Å–æ–±–∞—è –≤–µ—â—å/—Å–∏–º–≤–æ–ª: ${formData.heroItem}  
      
    //   *–û —Å–ª—É–∂–±–µ*  
    //   4. –ß–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ–¥–æ–≤–æ–π: ${formData.job}  
    //   5. –¢–µ—Ö–Ω–∏–∫–∞/–æ—Ä—É–∂–∏–µ: ${formData.equipment}  
      
    //   *–û —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ, –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ –∫–æ–º–∞–Ω–¥–µ*  
    //   6. –ß—Ç–æ –¥–∞—ë—Ç —Å–∏–ª—É –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—é: ${formData.motivation}  
    //   7. –ë–æ–µ–≤—ã–µ —Ç–æ–≤–∞—Ä–∏—â–∏: ${formData.comrades}  
      
    //   *–õ–∏—á–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –≤ –ø–µ—Å–Ω—é*  
    //   8. –ú–æ–º–µ–Ω—Ç—ã –∏–∑ –∂–∏–∑–Ω–∏ –≥–µ—Ä–æ—è: ${formData.moments}  
    //   9. –í–∞–∂–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–ª–∏ —Ü–∏—Ç–∞—Ç—ã: ${formData.words}  
    //   10. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: 
    //      –í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Å–ª—É–∂–±–µ: ${
    //        formData.additionalChecks.remembrance ? "‚úì" : "‚úó"
    //      }
    //      –õ–∏—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ: ${
    //        formData.additionalChecks.personalMessage ? "‚úì" : "‚úó"
    //      }
    //      –û—Å–æ–±—ã–µ —Ñ—Ä–∞–∑—ã: ${formData.additionalChecks.specialPhrases ? "‚úì" : "‚úó"}
    //      –ü–æ—Å–ª–∞–Ω–∏–µ –≤ –±—É–¥—É—â–µ–µ: ${
    //        formData.additionalChecks.futureMessage ? "‚úì" : "‚úó"
    //      }
    //      –î—Ä—É–≥–æ–µ: ${formData.otherText}
    //         `;
    //   const response = await fetch(
    //     `https://api.telegram.org/bot${botToken}/sendMessage`,
    //     {
    //       method: "POST",
    //       headers: { "Content-Type": "application/json" },
    //       body: JSON.stringify({
    //         chat_id: chatId,
    //         text: message,
    //         parse_mode: "Markdown",
    //       }),
    //     }
    //   ).then((res) => console.log(res.json()));
    //   const response1 = await fetch(
    //     `https://api.telegram.org/bot${adminBotToken}/sendMessage`,
    //     {
    //       method: "POST",
    //       headers: { "Content-Type": "application/json" },
    //       body: JSON.stringify({
    //         chat_id: 1372814991,
    //         text: adminMessage,
    //         parse_mode: "Markdown",
    //       }),
    //     }
    //   ).then((res) => console.log(res.json()));
    //   const response2 = await fetch(
    //     `https://api.telegram.org/bot${adminBotToken}/sendMessage`,
    //     {
    //       method: "POST",
    //       headers: { "Content-Type": "application/json" },
    //       body: JSON.stringify({
    //         chat_id: 6398268582,
    //         text: adminMessage,
    //         parse_mode: "Markdown",
    //       }),
    //     }
    //   ).then((res) => console.log(res.json()));

    //   const response3 = await fetch(
    //     `https://api.telegram.org/bot${adminBotToken}/sendMessage`,
    //     {
    //       method: "POST",
    //       headers: { "Content-Type": "application/json" },
    //       body: JSON.stringify({
    //         chat_id: 251173063,
    //         text: adminMessage,
    //         parse_mode: "Markdown",
    //       }),
    //     }
    //   ).then((res) => console.log(res.json()));
    //   const result = await response.json();
    //   if (result.ok & response1.ok & response2.ok & response3.ok) {
    //     // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã
    //     // window.location.href = paymentLink;
    //   } else {
    //     setShowPopup(true);
    //   }
    //   // else {
    //   //   // alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö.");
    //   //   setShowPopup(true);
    //   // }
    //   const payload = JSON.stringify({
    //     title: "Title",
    //     description: "Description",
    //     payload: "Hello",
    //     currency: "RUB",
    //     prices: "10",
    //   });
    //   TelegramWebApp.sendData(`${payload}`);

    //   console.log(payload);
    // } catch (error) {
    //   console.error("–û—à–∏–±–∫–∞:", error);
    //   setShowPopup(true);
    // }
  };
  // const processPaymentAndSubmit = async () => {
  //   const paymentId = await createPaymentLink(totalPrice);
  //   if (paymentId) {
  //     setIsPaymentPending(true);
  //     checkPaymentStatus(paymentId);
  //   } else {
  //     console.error("‚ùå –û—à–∏–±–∫–∞: paymentId –Ω–µ –ø–æ–ª—É—á–µ–Ω.");
  //   }
  // };
  useEffect(() => {
    setTotalPrice(queryPrice);
    console.log("Total price:", totalPrice);
    // paymentEvent = TelegramWebView.recieveEvent("invoice_closed", {slug: "", status: ""});
    window.addEventListener("invoice_closed", ({ event }) => {
      const { slug, status } = JSON.parse(event);
      console.log("Invoice closed:", slug, status);
    })
    
  }, [queryPrice, totalPrice]);

  return (
    <>
      <div className={showPopup ? "blur-background" : ""}>
        <div className="h-15">
          <BackButton />
        </div>
        <form className="px-5 py-10 pb-[550px]" onSubmit={handleSubmit}>
          {/* Updated custom radio group for formRole */}
          <h2 className="text-2xl text-center mb-5 font-header_form">
            –î–ª—è –∫–æ–≥–æ
          </h2>
          <div className="w-full px-4 py-5 bg-[rgba(44,44,44,0.8)] flex flex-col gap-3 rounded-md shadow-[0px_0px_15px_rgba(0,0,0,0.09)]">
            <legend className="text-lg font-semibold mb-3 select-none text-white">
              1 –ö—Ç–æ –∑–∞–ø–æ–ª–Ω—è–µ—Ç —Ñ–æ—Ä–º—É?
            </legend>
            <label
              htmlFor="option1"
              className={`font-medium h-14 relative hover:bg-zinc-100 flex items-center px-3 gap-3 rounded-lg select-none ${
                formData.formRole === "–Ø —Å–æ–ª–¥–∞—Ç, —Ö–æ—á—É –ø–µ—Å–Ω—é –æ —Å–µ–±–µ"
                  ? "text-black bg-blue-50 ring-blue-300 ring-1"
                  : ""
              }`}
              onClick={() =>
                setFormData({
                  ...formData,
                  formRole: "–Ø —Å–æ–ª–¥–∞—Ç, —Ö–æ—á—É –ø–µ—Å–Ω—é –æ —Å–µ–±–µ",
                })
              }
            >
              <div className="w-5">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className={`h-5 w-5 ${
                    formData.formRole === "–Ø —Å–æ–ª–¥–∞—Ç, —Ö–æ—á—É –ø–µ—Å–Ω—é –æ —Å–µ–±–µ"
                      ? "text-[#4a592c]"
                      : "text-gray-300"
                  }`}
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fillRule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-10.707a1 1 0 00-1.414-1.414L9 9.586 7.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    clipRule="evenodd"
                  />
                </svg>
              </div>
              –Ø —Å–æ–ª–¥–∞—Ç, —Ö–æ—á—É –ø–µ—Å–Ω—é –æ —Å–µ–±–µ
            </label>
            <label
              htmlFor="option2"
              className={`font-medium h-14 relative hover:bg-zinc-100 flex items-center px-3 gap-3 rounded-lg select-none ${
                formData.formRole ===
                "–Ø –±–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫–∞ (–∂–µ–Ω–∞, –º–∞—Ç—å, –æ—Ç–µ—Ü, –¥—Ä—É–≥)"
                  ? "text-black bg-blue-50 ring-blue-300 ring-1"
                  : ""
              }`}
              onClick={() =>
                setFormData({
                  ...formData,
                  formRole: "–Ø –±–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫–∞ (–∂–µ–Ω–∞, –º–∞—Ç—å, –æ—Ç–µ—Ü, –¥—Ä—É–≥)",
                })
              }
            >
              <div className="w-5">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className={`h-5 w-5 ${
                    formData.formRole ===
                    "–Ø –±–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫–∞ (–∂–µ–Ω–∞, –º–∞—Ç—å, –æ—Ç–µ—Ü, –¥—Ä—É–≥)"
                      ? "text-[#4a592c]"
                      : "text-gray-300"
                  }`}
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fillRule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-10.707a1 1 0 00-1.414-1.414L9 9.586 7.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    clipRule="evenodd"
                  />
                </svg>
              </div>
              –Ø –±–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫–∞ (–∂–µ–Ω–∞, –º–∞—Ç—å, –æ—Ç–µ—Ü, –¥—Ä—É–≥)
            </label>
            <label
              htmlFor="option3"
              className={`font-medium h-14 relative hover:bg-zinc-100 flex items-center px-3 gap-3 rounded-lg select-none ${
                formData.formRole === "–Ø —Å–æ—Å–ª—É–∂–∏–≤–µ—Ü"
                  ? "text-black bg-blue-50 ring-blue-300 ring-1"
                  : ""
              }`}
              onClick={() =>
                setFormData({ ...formData, formRole: "–Ø —Å–æ—Å–ª—É–∂–∏–≤–µ—Ü" })
              }
            >
              <div className="w-5">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className={`h-5 w-5 ${
                    formData.formRole === "–Ø —Å–æ—Å–ª—É–∂–∏–≤–µ—Ü"
                      ? "text-[#4a592c]"
                      : "text-gray-300"
                  }`}
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fillRule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-10.707a1 1 0 00-1.414-1.414L9 9.586 7.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    clipRule="evenodd"
                  />
                </svg>
              </div>
              –Ø —Å–æ—Å–ª—É–∂–∏–≤–µ—Ü
            </label>
          </div>

          <div className="w-full mb-5 px-4 py-5 bg-[rgba(44,44,44,0.8)] flex flex-col gap-3 rounded-md shadow-[0px_0px_15px_rgba(0,0,0,0.09)] mt-5">
            <legend className="text-lg font-semibold mb-3 select-none">
              2. –î–ª—è –∫–æ–≥–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø–µ—Å–Ω—è?
            </legend>
            <label
              htmlFor="option1_song"
              className={`font-medium h-14 relative hover:bg-zinc-100 flex items-center px-3 gap-3 rounded-lg select-none ${
                formData.songFor === "–î–ª—è —Å–æ–ª–¥–∞—Ç–∞ –Ω–∞ –ø–µ—Ä–µ–¥–æ–≤–æ–π"
                  ? "text-black bg-blue-50 ring-blue-300 ring-1"
                  : ""
              }`}
              onClick={() =>
                setFormData({
                  ...formData,
                  songFor: "–î–ª—è —Å–æ–ª–¥–∞—Ç–∞ –Ω–∞ –ø–µ—Ä–µ–¥–æ–≤–æ–π",
                })
              }
            >
              <div className="w-5">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className={`h-5 w-5 ${
                    formData.songFor === "–î–ª—è —Å–æ–ª–¥–∞—Ç–∞ –Ω–∞ –ø–µ—Ä–µ–¥–æ–≤–æ–π"
                      ? "text-[#4a592c]"
                      : "text-gray-300"
                  }`}
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fillRule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-10.707a1 1 0 00-1.414-1.414L9 9.586 7.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    clipRule="evenodd"
                  />
                </svg>
              </div>
              –î–ª—è —Å–æ–ª–¥–∞—Ç–∞ –Ω–∞ –ø–µ—Ä–µ–¥–æ–≤–æ–π
            </label>
            <label
              htmlFor="option2_song"
              className={`font-medium h-14 relative hover:bg-zinc-100 flex items-center px-3 gap-3 rounded-lg select-none ${
                formData.songFor === "–û—Ç —Å–æ–ª–¥–∞—Ç–∞ –±–ª–∏–∑–∫–∏–º"
                  ? "text-black bg-blue-50 ring-blue-300 ring-1"
                  : ""
              }`}
              onClick={() =>
                setFormData({ ...formData, songFor: "–û—Ç —Å–æ–ª–¥–∞—Ç–∞ –±–ª–∏–∑–∫–∏–º" })
              }
            >
              <div className="w-5">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className={`h-5 w-5 ${
                    formData.songFor === "–û—Ç —Å–æ–ª–¥–∞—Ç–∞ –±–ª–∏–∑–∫–∏–º"
                      ? "text-[#4a592c]"
                      : "text-gray-300"
                  }`}
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fillRule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-10.707a1 1 0 00-1.414-1.414L9 9.586 7.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    clipRule="evenodd"
                  />
                </svg>
              </div>
              –û—Ç —Å–æ–ª–¥–∞—Ç–∞ –±–ª–∏–∑–∫–∏–º
            </label>
            <label
              htmlFor="option3_song"
              className={`font-medium h-14 relative hover:bg-zinc-100 flex items-center px-3 gap-3 rounded-lg select-none ${
                formData.songFor === "–ß—Ç–æ–±—ã —É–≤–µ–∫–æ–≤–µ—á–∏—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é"
                  ? "text-black bg-blue-50 ring-blue-300 ring-1"
                  : ""
              }`}
              onClick={() =>
                setFormData({
                  ...formData,
                  songFor: "–ß—Ç–æ–±—ã —É–≤–µ–∫–æ–≤–µ—á–∏—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é",
                })
              }
            >
              <div className="w-5">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className={`h-5 w-5 ${
                    formData.songFor === "–ß—Ç–æ–±—ã —É–≤–µ–∫–æ–≤–µ—á–∏—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é"
                      ? "text-[#4a592c]"
                      : "text-gray-300"
                  }`}
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fillRule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-10.707a1 1 0 00-1.414-1.414L9 9.586 7.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    clipRule="evenodd"
                  />
                </svg>
              </div>
              –ß—Ç–æ–±—ã —É–≤–µ–∫–æ–≤–µ—á–∏—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é
            </label>
          </div>

          <h2 className="text-2xl text-center font-header_form">–û –≥–µ—Ä–æ–µ</h2>
          <div>
            <div className="w-full p-5 bg-[rgba(44,44,44,0.8)] rounded-lg mt-5 mb-5">
              <label className="font-semibold text-lg">
                1.–ö–∞–∫ –µ–≥–æ –∑–æ–≤—É—Ç? –ö–∞–∫–æ–µ —É –Ω–µ–≥–æ –ø–æ–∑—ã–≤–Ω–æ–µ?
              </label>
              <div className="form-field mt-6">
                <input
                  type="text"
                  name="heroName"
                  value={formData.heroName}
                  onChange={handleChange}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ê–ª–µ–∫—Å–µ–π, ¬´–ë–∞—Ä—Å¬ª"
                  className={fieldClass} // updated
                  id="heroName-input"
                  required
                />
              </div>
            </div>
          </div>
          <div>
            <div className="w-full p-5 bg-[rgba(44,44,44,0.8)] rounded-lg font-mono">
              <label className="font-semibold text-lg">
                2.–û—Ç–∫—É–¥–∞ –æ–Ω —Ä–æ–¥–æ–º?
              </label>
              <div className="form-field mt-6">
                <textarea
                  name="heroOrigin"
                  value={formData.heroOrigin}
                  onChange={handleChange}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ì–æ—Ä–æ–¥ –ö—É—Ä–≥–∞–Ω, –≤—ã—Ä–æ—Å –Ω–∞ –±–µ—Ä–µ–≥—É –¢–æ–±–æ–ª–∞"
                  className={fieldClass} // updated
                  id="heroOrigin-textarea"
                  required
                />
              </div>
            </div>
          </div>
          <div>
            <div className="w-full p-5 bg-[rgba(44,44,44,0.8)] rounded-lg mt-5 mb-5 font-semibold">
              <label className="font-semibold text-lg">
                3.–ï—Å—Ç—å –ª–∏ —É –Ω–µ–≥–æ –æ—Å–æ–±–∞—è –≤–µ—â—å, —Å–∏–º–≤–æ–ª –∏–ª–∏ —Ç–∞–ª–∏—Å–º–∞–Ω? –ü–æ—á–µ–º—É —ç—Ç–æ
                –≤–∞–∂–Ω–æ?
              </label>
              <div className="form-field mt-6">
                <textarea
                  name="heroItem"
                  value={formData.heroItem}
                  onChange={handleChange}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ö—É–ª–æ–Ω —Å –∏–º–µ–Ω–µ–º –¥–æ—á–µ—Ä–∏"
                  className={fieldClass} // updated
                  id="heroItem-textarea"
                  required
                />
              </div>
            </div>
          </div>

          <h2 className="text-2xl text-center font-header_form">–û —Å–ª—É–∂–±–µ</h2>
          <div>
            <div className="w-full p-5 bg-[rgba(44,44,44,0.8)] rounded-lg mt-5 mb-5">
              <label className="font-semibold text-lg">
                4.–ß–µ–º –æ–Ω –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ–¥–æ–≤–æ–π?
              </label>
              <div className="form-field mt-6">
                <textarea
                  name="job"
                  value={formData.job}
                  onChange={handleChange}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –†–∞–∑–≤–µ–¥—á–∏–∫ –≤ –≥—Ä—É–ø–ø–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è"
                  className={fieldClass} // updated
                  id="job-textarea"
                  required
                />
              </div>
            </div>
          </div>
          <div>
            <div className="w-full p-5 bg-[rgba(44,44,44,0.8)] rounded-lg font-mono  mt-5 mb-5">
              <label className="font-semibold text-lg">
                5.–° –∫–∞–∫–æ–π —Ç–µ—Ö–Ω–∏–∫–æ–π –∏–ª–∏ –æ—Ä—É–∂–∏–µ–º –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç?
              </label>
              <div className="form-field mt-6">
                <textarea
                  name="equipment"
                  value={formData.equipment}
                  onChange={handleChange}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –°–Ω–∞–π–ø–µ—Ä —Å –≤–∏–Ω—Ç–æ–≤–∫–æ–π –°–í–î"
                  className={fieldClass} // updated
                  id="equipment-textarea"
                  required
                />
              </div>
            </div>
          </div>

          <h2 className="text-2xl text-center font-header_form">
            –û —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ, –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ –∫–æ–º–∞–Ω–¥–µ
          </h2>
          <div>
            <div className="w-full p-5 bg-[rgba(44,44,44,0.8)] rounded-lg font-mono mt-5 mb-5">
              <label className="font-semibold text-lg">
                6.–ß—Ç–æ –¥–∞—ë—Ç –µ–º—É —Å–∏–ª—É –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—é? –ö–∞–∫–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ —Ü–µ–Ω–∏—Ç?
              </label>
              <div className="form-field mt-6">
                <textarea
                  name="motivation"
                  value={formData.motivation}
                  onChange={handleChange}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –í–µ—Ä–∞ –≤ –ø–æ–±–µ–¥—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–æ–¥–Ω—ã—Ö"
                  className={fieldClass} // updated
                  id="motivation-textarea"
                  required
                />
              </div>
            </div>
          </div>
          <div>
            <div className="w-full p-5 bg-[rgba(44,44,44,0.8)] rounded-lg font-mono mt-5 mb-5">
              <label className="font-semibold text-lg">
                7.–ö—Ç–æ –µ–≥–æ –±–æ–µ–≤—ã–µ —Ç–æ–≤–∞—Ä–∏—â–∏?
              </label>
              <div className="form-field mt-6">
                <textarea
                  name="comrades"
                  value={formData.comrades}
                  onChange={handleChange}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –¢—Ä–∞–¥–∏—Ü–∏–∏ –∏ —Ä–∏—Ç—É–∞–ª—ã –≤ —Å–ø–ª–æ—á—ë–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ"
                  className={fieldClass} // updated
                  id="comrades-textarea"
                  required
                />
              </div>
            </div>
          </div>

          <h2 className="text-2xl text-center font-header_form">
            –õ–∏—á–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –≤ –ø–µ—Å–Ω—é
          </h2>
          <div>
            <div className="w-full p-5 bg-[rgba(44,44,44,0.8)] rounded-lg font-mono mt-5 mb-5">
              <label className="font-semibold text-lg">
                8.–ö–∞–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã –∏–∑ –∂–∏–∑–Ω–∏ –≥–µ—Ä–æ—è –¥–æ–ª–∂–Ω—ã –ø—Ä–æ–∑–≤—É—á–∞—Ç—å?
              </label>
              <div className="form-field mt-6">
                <textarea
                  name="moments"
                  value={formData.moments}
                  onChange={handleChange}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ü–µ—Ä–≤—ã–µ –¥–Ω–∏ –Ω–∞ —Å–ª—É–∂–±–µ, –ø–æ–±–µ–¥—ã –∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏"
                  className={fieldClass} // updated
                  id="moments-textarea"
                  required
                />
              </div>
            </div>
          </div>
          <div>
            <div className="w-full p-5 bg-[rgba(44,44,44,0.8)] rounded-lg font-mono mt-5 mb-5">
              <label className="font-semibold text-lg">
                9.–ö–∞–∫–∏–µ —Å–ª–æ–≤–∞, —Ü–∏—Ç–∞—Ç—ã –∏–ª–∏ –æ–±–µ—â–∞–Ω–∏—è –≤–∞–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å?
              </label>
              <div className="form-field mt-6">
                <textarea
                  name="words"
                  value={formData.words}
                  onChange={handleChange}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–ë—Ä–∞—Ç –∑–∞ –±—Ä–∞—Ç–∞, –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞–±—ã—Ç!¬ª"
                  className={fieldClass} // updated
                  id="words-textarea"
                  required
                />
              </div>
            </div>
          </div>
          <div>
            <h2 className="text-2xl text-center font-header_form">
              –ß—Ç–æ –µ—â—ë –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å?
            </h2>
            <div className="w-full p-5 bg-[rgba(44,44,44,0.8)] rounded-lg font-mono mt-5 mb-5">
              <label className="font-semibold text-lg">
                –í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Å–ª—É–∂–±–µ
              </label>
              <div className="form-field mt-6">
                <textarea
                  name="remembranceText"
                  value={formData.remembranceText}
                  onChange={handleChange}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Å–ª—É–∂–±–µ"
                  className={fieldClass}
                />
              </div>
              <label className="font-semibold text-lg">–õ–∏—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ</label>
              <div className="form-field mt-6">
                <textarea
                  name="personalMessageText"
                  value={formData.personalMessageText}
                  onChange={handleChange}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –ª–∏—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ"
                  className={fieldClass}
                />
              </div>
              <label className="font-semibold text-lg">
                –û—Å–æ–±—ã–µ —Ñ—Ä–∞–∑—ã, —Ü–∏—Ç–∞—Ç—ã
              </label>
              <div className="form-field mt-6">
                <textarea
                  name="specialPhrasesText"
                  value={formData.specialPhrasesText}
                  onChange={handleChange}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –æ—Å–æ–±—ã–µ —Ñ—Ä–∞–∑—ã –∏–ª–∏ —Ü–∏—Ç–∞—Ç—ã"
                  className={fieldClass}
                />
              </div>
              <label className="font-semibold text-lg">
                –ü–æ—Å–ª–∞–Ω–∏–µ –≤ –±—É–¥—É—â–µ–µ
              </label>
              <div className="form-field mt-6">
                <textarea
                  name="futureMessageText"
                  value={formData.futureMessageText}
                  onChange={handleChange}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–æ—Å–ª–∞–Ω–∏–µ –≤ –±—É–¥—É—â–µ–µ"
                  className={fieldClass}
                />
              </div>
              <label className="font-semibold text-lg pt-5">üìù –î—Ä—É–≥–æ–µ:</label>
              <div className="form-field mt-6">
                <textarea
                  name="otherText"
                  value={formData.otherText}
                  onChange={handleChange}
                  placeholder="–í–∞—à —Ç–µ–∫—Å—Ç"
                  className={fieldClass}
                />
              </div>
            </div>
          </div>
          <button
            type="submit"
            className="relative group inline-block w-full py-4 px-6 text-center text-gray-50 hover:text-gray-900 bg-[#7CA200] font-semibold rounded-full overflow-hidden transition duration-200"
            // onClick={handleSubmit}
          >
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
          </button>
        </form>
      </div>
      {showPopup && (
        <div
          style={{
            position: "fixed",
            top: 0,
            left: 0,
            width: "100%",
            height: "100%",
            backdropFilter: "blur(5px)",
            backgroundColor: "rgba(0,0,0,0.3)",
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            zIndex: 999,
          }}
        >
          <div
            style={{
              // background: "#fff",
              // padding: "20px",
              borderRadius: "8px",
              position: "relative",
            }}
          >
            <Reciepie price={totalPrice} />
          </div>
        </div>
      )}
    </>
  );
}

SurveyForm.propTypes = {
  price: PropTypes.number,
};